import type { Metadata } from "next";
import { NextIntlClientProvider } from "next-intl";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/Navbar";
import Footer from "@/components/Footer";
import { locales } from "../../../i18n";
import { notFound } from "next/navigation";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// ðŸ‘‡ Move everything that uses `params` inside a separate async function
export default function RootLayoutWrapper({
  children,
  params,
}: {
  children: React.ReactNode;
  params: { locale: string };
}) {
  return <RootLayoutAsync params={params}>{children}</RootLayoutAsync>;
}

async function RootLayoutAsync({
  children,
  params,
}: {
  children: React.ReactNode;
  params: { locale: string };
}) {

  const locale = params.locale;
  
   // eslint-disable-next-line
  if (!locales.includes(locale as any)) {
    notFound();
  }

  const messages = (await import(`../../locales/${locale}.json`)).default;

  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <NextIntlClientProvider locale={locale} messages={messages}>
          <Navbar />
          {children}
          <Footer />
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
